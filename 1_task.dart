void main() {
  // task 1
  // mathOperators();

  // task 2
  // equalityOperators();

  // task 3
  // logicalOperators();

  // task 4
  // ternaryOperator();

  // task 5
  // assignmentOperators();

  // task 6
  // ifElseConstruction();

  // task 7
  // switchStatementConstruction();

  // task 8
  forLoopConstruction();
}

void mathOperators() {
  double width = 18.4;
  double height = 10.9;
  int oneSquareWidth = 1;
  int oneSquareHeight = 1;
  int oneSquare = oneSquareWidth * oneSquareHeight;

  print('–ü–µ—Ä–∏–º–µ—Ç—Ä = ${(width + height) * 2}');
  print('–ü–ª–æ—â–∞ = ${width * height}');
  print('–ü–æ–≤–Ω–∏—Ö –∫–≤–∞–¥—Ä–∞—Ç—ñ–≤ —É –ø–ª–æ—â–∏–Ω—ñ = ${width * height ~/ oneSquare}');
}

void equalityOperators() {
  var number = 180;

  print('–ß–∏ –±—ñ–ª—å—à–µ —á–∏—Å–ª–æ –∑–∞ 50: ${number > 50}');
  print('–ß–∏ –º–µ–Ω—à–µ —á–∏—Å–ª–æ –∑–∞ 100: ${number < 100}');
  print('–ß–∏ –¥—ñ–ª–∏—Ç—å—Å—è —á–∏—Å–ª–æ –Ω–∞ 5 –±–µ–∑ –∑–∞–ª–∏—à–∫—É: ${(number % 5) == 0}');
}

void logicalOperators() {
  bool hasMoney = true;
  // bool hasMoney = false;
  bool isStoreOpen = true;
  // bool isStoreOpen = false;

  print('–ß–∏ –º–æ–∂–Ω–∞ –∑—Ä–æ–±–∏—Ç–∏ –ø–æ–∫—É–ø–∫—É: ${hasMoney && isStoreOpen}');
  print('–ß–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–æ—á–µ–∫–∞—Ç–∏: ${!isStoreOpen || !hasMoney}');
}

void ternaryOperator() {
  int temperature = 9;
  bool whatIsTemp = temperature > 25;
  bool isCold = !whatIsTemp && (temperature < 10);

  whatIsTemp ? print('–¢–µ–ø–ª–æ') : print('–ü—Ä–æ—Ö–æ–ª–æ–¥–Ω–æ');
  isCold ? print('–î—É–∂–µ —Ö–æ–ª–æ–¥–Ω–æ') : print('–ü—Ä–æ—Ö–æ–ª–æ–¥–Ω–æ');
}

void assignmentOperators() {
  double score = 0;
  int correctAnswers = 17;
  int mistakes = 3;
  int totalQuestions = 20;

  score += 10 * correctAnswers;
  score -= 5 * mistakes;
  score *= 2;
  score /= totalQuestions;

  print('–û—Å—Ç–∞—Ç–æ—á–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: $score');
}

void ifElseConstruction() {
  int examScore = 56;
  // int examScore = 120;

  if (examScore >= 0 && examScore <= 100) {
    if (examScore > 90) {
      print('–í—ñ–¥–º—ñ–Ω–Ω–æ! –û—Ü—ñ–Ω–∫–∞: $examScore');
    } else if (examScore >= 75) {
      print('–î–æ–±—Ä–µ! –û—Ü—ñ–Ω–∫–∞: $examScore');
    } else if (examScore >= 60) {
      print('–ó–∞–¥–æ–≤—ñ–ª—å–Ω–æ. –û—Ü—ñ–Ω–∫–∞: $examScore');
    } else if (examScore >= 20) {
      print('–ù–µ –∑–¥–∞–Ω–æ. –û—Ü—ñ–Ω–∫–∞: $examScore');
    } else {
      print('–ü–æ–≤—Ç–æ—Ä–∏—Ç–∏ –∫—É—Ä—Å. –û—Ü—ñ–Ω–∫–∞: $examScore');
    }
  } else {
    print('–£–ø—Å... –ø–æ–º–∏–ª–∫–∞. –ù–µ–≤—ñ—Ä–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è –æ—Ü—ñ–Ω–∫–∏. ');
  }
}

void switchStatementConstruction() {
  int dayNumber = 7;

  switch (dayNumber) {
    case 1:
      print('–ü–æ–Ω–µ–¥—ñ–ª–æ–∫');
    case 2:
      print('–í—ñ–≤—Ç–æ—Ä–æ–∫');
    case 3:
      print('–°–µ—Ä–µ–¥–∞');
    case 4:
      print('–ß–µ—Ç–≤–µ—Ä');
    case 5:
      print('–ü º—è—Ç–Ω–∏—Ü—è!');
    case 6:
      print('–°—É–±–æ—Ç–∞');
      print('–í–∏—Ö—ñ–¥–Ω–∏–π –¥–µ–Ω—å üéâ');
    case 7:
      print('–ù–µ–¥—ñ–ª—è');
      print('–í–∏—Ö—ñ–¥–Ω–∏–π –¥–µ–Ω—å üéâ');
    // // GPT version
    // case 6:
    // case 7:
    //   print(dayNumber == 6 ? '–°—É–±–æ—Ç–∞' : '–ù–µ–¥—ñ–ª—è');
    //   print('–í–∏—Ö—ñ–¥–Ω–∏–π –¥–µ–Ω—å üéâ');
    default:
      print('–ù–µ–≤—ñ—Ä–Ω–∏–π –Ω–æ–º–µ—Ä –¥–Ω—è');
  }
}

void forLoopConstruction() {
  List<int?> result1 = [];
  List<int?> result2 = [];
  int result3 = 0;

  for (var i = 0; i < 10; i++) {
    result1.add(i + 1);
  }

  for (var i = 0; i < 10; i++) {
    if ((i + 1) % 2 == 0) {
      result2.add(i + 1);
    }
  }

  for (var i = 0; i < 10; i++) {
    result3 += i + 1;
  }

  // –ß–∏ –∫—Ä–∞—â–µ –∑–∞–ø—É—Å–∫–∞—Ç–∏ —Ü–∏–∫–ª —Ç–∞–∫:
  // for (var i = 1; i <= 10; i++)
  // –©–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ (i + 1) –≤ –æ–±—á–∏—Å–ª–µ–Ω–Ω—è—Ö?

  print('–í—Å—ñ —á–∏—Å–ª–∞ –≤—ñ–¥ 1 –¥–æ 10: $result1');
  print('–¢—ñ–ª—å–∫–∏ –ø–∞—Ä–Ω—ñ —á–∏—Å–ª–∞: $result2');
  print('–°—É–º–∞ —á–∏—Å–µ–ª –≤—ñ–¥ 1 –¥–æ 10: $result3');
}
