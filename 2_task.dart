// üß© –ó–∞–¥–∞—á–∞: –ê–Ω–∞–ª—ñ–∑ –∫–ª–∞—Å—É —É—á–Ω—ñ–≤

// –£ –∫–ª–∞—Å—ñ —î —Å–ø–∏—Å–æ–∫ —É—á–Ω—ñ–≤. –î–ª—è –∫–æ–∂–Ω–æ–≥–æ —É—á–Ω—è –∑–±–µ—Ä—ñ–≥–∞—î—Ç—å—Å—è:
// 	‚Ä¢	—ñ–º‚Äô—è (—Ç–∏–ø String),
// 	‚Ä¢	–≤—ñ–∫ (—Ç–∏–ø int),
// 	‚Ä¢	—Å–µ—Ä–µ–¥–Ω—ñ–π –±–∞–ª (—Ç–∏–ø double),
// 	‚Ä¢	—á–∏ –≤—ñ–¥–≤—ñ–¥—É–≤–∞–≤ —Ñ–∞–∫—É–ª—å—Ç–∞—Ç–∏–≤–∏ (—Ç–∏–ø bool).

// üìã –ó–∞–≤–¥–∞–Ω–Ω—è:
// 	1.	–°—Ç–≤–æ—Ä–∏ —Å–ø–∏—Å–æ–∫ —ñ–∑ —â–æ–Ω–∞–π–º–µ–Ω—à–µ 5 —É—á–Ω—ñ–≤ (–≤–∏–∫–æ—Ä–∏—Å—Ç–∞–π —Å–ø–∏—Å–æ–∫ –∑—ñ —Å–ª–æ–≤–Ω–∏–∫–∞–º–∏ –∞–±–æ –∫–ª–∞—Å).
// 	2.	–û–±—á–∏—Å–ª–∏:
// 	‚Ä¢	–∫—ñ–ª—å–∫—ñ—Å—Ç—å —É—á–Ω—ñ–≤, —è–∫—ñ –º–∞—é—Ç—å —Å–µ—Ä–µ–¥–Ω—ñ–π –±–∞–ª –≤–∏—â–µ 8.5;
// 	‚Ä¢	—Å–µ—Ä–µ–¥–Ω—ñ–π –≤—ñ–∫ —É—á–Ω—ñ–≤;
// 	‚Ä¢	—á–∏ —î —Ö–æ—á–∞ –± –æ–¥–∏–Ω —É—á–µ–Ω—å, —è–∫–∏–π –Ω–µ –≤—ñ–¥–≤—ñ–¥—É—î —Ñ–∞–∫—É–ª—å—Ç–∞—Ç–∏–≤–∏;
// 	3.	–í–∏–≤–µ–¥–∏ —Å–ø–∏—Å–æ–∫ —É—á–Ω—ñ–≤, —ñ–º–µ–Ω–∞ —è–∫–∏—Ö –º—ñ—Å—Ç—è—Ç—å –ª—ñ—Ç–µ—Ä—É "–∞", —Ç–∞ —ó—Ö–Ω—ñ–π –±–∞–ª.
// 	4.	–í–∏–∫–æ—Ä–∏—Å—Ç–∞–π —Ü–∏–∫–ª –¥–ª—è –≤–∏–≤–æ–¥—É –∫–æ–∂–Ω–æ–≥–æ —É—á–Ω—è —É —Ñ–æ—Ä–º–∞—Ç—ñ:
//   –Ü–º º—è: –ü–µ—Ç—Ä–æ, –í—ñ–∫: 15, –ë–∞–ª: 9.2, –§–∞–∫—É–ª—å—Ç–∞—Ç–∏–≤–∏: —Ç–∞–∫
//  5.	–Ø–∫—â–æ —Å–µ—Ä–µ–¥–Ω—ñ–π –±–∞–ª –Ω–∏–∂—á–µ 6 ‚Äî –≤–∏–≤–µ–¥–∏ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è:
//   "–£–≤–∞–≥–∞: —É—á–µ–Ω—å [–Ü–º º—è] –º–∞—î –Ω–∏–∑—å–∫–∏–π —Å–µ—Ä–µ–¥–Ω—ñ–π –±–∞–ª!"

// üîß –î–ª—è —Ä–æ–∑–≤‚Äô—è–∑–∞–Ω–Ω—è —Ç–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—î—à:
// 	‚Ä¢	—Ç–∏–ø–∏: String, int, double, bool, List, Map (–∞–±–æ class);
// 	‚Ä¢	–æ–ø–µ—Ä–∞—Ç–æ—Ä–∏: >, <, ==, &&, ||, !, –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–Ω—ñ;
// 	‚Ä¢	—Ü–∏–∫–ª–∏: for –∞–±–æ for-in;
// 	‚Ä¢	—É–º–æ–≤–Ω—ñ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∏: if, else, continue.

void main() {
  List<Map<String, dynamic>> students = [
    {'Name': 'Boris', 'Age': 24, 'Average score': 6, 'Attend electives': true},
    {'Name': 'Rick', 'Age': 22, 'Average score': 7.5, 'Attend electives': true},
    {'Name': 'Stan', 'Age': 23, 'Average score': 8.6, 'Attend electives': true},
    {'Name': 'Li', 'Age': 26, 'Average score': 6.4, 'Attend electives': true},
    {
      'Name': 'Valerii',
      'Age': 25,
      'Average score': 8.7,
      'Attend electives': true,
    },
    {
      'Name': 'Leonid',
      'Age': 24,
      'Average score': 9.4,
      'Attend electives': true,
    },
    {
      'Name': 'Fedor',
      'Age': 23,
      'Average score': 7.4,
      'Attend electives': true,
    },
    {
      'Name': 'Serhii',
      'Age': 22,
      'Average score': 8.5,
      'Attend electives': true,
    },
  ];

  int globalAverageScore = 0;
  double middleAge = 0;
  int studentsCount = 0;
  bool isElectives = false;
  List<String?> notAttendElectives = [];
  double middleAverageScore = 5;
  bool isNameWithA = false;
  // type 'int' is not a subtype of type 'double' -- error Map<String?, double> studentsNameWithA = {}; —è–∫—â–æ –ø–µ—Ä–µ–¥–∞—î—Ç—å—Å—è —Ü—ñ–ª–µ —á–∏—Å–ª–æ
  Map<String?, dynamic> studentsNameWithA = {};
  String searchLetter = "q";
  bool isAverageScore = false;
  List<String?> lowAverageScore = [];

  for (var student in students) {
    // –∫—ñ–ª—å–∫—ñ—Å—Ç—å —É—á–Ω—ñ–≤, —è–∫—ñ –º–∞—é—Ç—å —Å–µ—Ä–µ–¥–Ω—ñ–π –±–∞–ª –≤–∏—â–µ 8.5 -- –æ–±—á–∏—Å–ª–µ–Ω–Ω—è
    if (student['Average score'] > 8.5) {
      globalAverageScore++;
    }

    // —Å–µ—Ä–µ–¥–Ω—ñ–π –≤—ñ–∫ —É—á–Ω—ñ–≤ -- –æ–±—á–∏—Å–ª–µ–Ω–Ω—è
    middleAge += student['Age'];
    studentsCount++;

    // —á–∏ —î —Ö–æ—á–∞ –± –æ–¥–∏–Ω —É—á–µ–Ω—å, —è–∫–∏–π –Ω–µ –≤—ñ–¥–≤—ñ–¥—É—î —Ñ–∞–∫—É–ª—å—Ç–∞—Ç–∏–≤–∏ -- –æ–±—á–∏—Å–ª–µ–Ω–Ω—è
    if (!student['Attend electives']) {
      isElectives = true;
      notAttendElectives.add(student['Name']);
    }

    // —Å–ø–∏—Å–æ–∫ —É—á–Ω—ñ–≤, —ñ–º–µ–Ω–∞ —è–∫–∏—Ö –º—ñ—Å—Ç—è—Ç—å –ª—ñ—Ç–µ—Ä—É searchLetter, —Ç–∞ —ó—Ö–Ω—ñ–π –±–∞–ª -- –æ–±—á–∏—Å–ª–µ–Ω–Ω—è
    // .split("") - —è –∑–∞–≥—É–≥–ª–∏–≤
    for (var letter in student['Name'].split("")) {
      if (letter == searchLetter) {
        isNameWithA = true;
        studentsNameWithA[student['Name']] = student['Average score'];
      }
    }

    // —è–∫—â–æ —Å–µ—Ä–µ–¥–Ω—ñ–π –±–∞–ª –Ω–∏–∂—á–µ middleAverageScore -- –æ–±—á–∏—Å–ª–µ–Ω–Ω—è
    if (student['Average score'] < middleAverageScore) {
      isAverageScore = true;
      lowAverageScore.add(student['Name']);
    }

    // –≤–∏–≤—ñ–¥ –∫–æ–∂–Ω–æ–≥–æ —É—á–Ω—è —É —Ñ–æ—Ä–º–∞—Ç—ñ: –Ü–º º—è: –ü–µ—Ç—Ä–æ, –í—ñ–∫: 15, –ë–∞–ª: 9.2, –§–∞–∫—É–ª—å—Ç–∞—Ç–∏–≤–∏: —Ç–∞–∫
    print(
      '–Ü–º º—è: ${student['Name']}, –í—ñ–∫: ${student['Age']}, –ë–∞–ª: ${student['Average score']}, –§–∞–∫—É–ª—å—Ç–∞—Ç–∏–≤–∏: ${(student['Attend electives']) ? '—Ç–∞–∫' : '–Ω—ñ'}',
    );
  }

  // –∫—ñ–ª—å–∫—ñ—Å—Ç—å —É—á–Ω—ñ–≤, —è–∫—ñ –º–∞—é—Ç—å —Å–µ—Ä–µ–¥–Ω—ñ–π –±–∞–ª –≤–∏—â–µ 8.5 -- –≤–∏–≤—ñ–¥
  print('\n–í–≥—Ä—É–ø—ñ $globalAverageScore —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤ –º–∞—é—Ç—å –±–∞–ª –≤–∏—â–µ –∑–∞ 8.5');

  // —Å–µ—Ä–µ–¥–Ω—ñ–π –≤—ñ–∫ —É—á–Ω—ñ–≤ -- –≤–∏–≤—ñ–¥
  middleAge = middleAge / studentsCount;
  print('\n–°–µ—Ä–µ–¥–Ω—ñ–π –≤—ñ–∫ —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤ –≤ –≥—Ä—É–ø—ñ - $middleAge');

  // —á–∏ —î —Ö–æ—á–∞ –± –æ–¥–∏–Ω —É—á–µ–Ω—å, —è–∫–∏–π –Ω–µ –≤—ñ–¥–≤—ñ–¥—É—î —Ñ–∞–∫—É–ª—å—Ç–∞—Ç–∏–≤–∏ -- –≤–∏–≤—ñ–¥
  (isElectives)
      ? print(
          '\n–í –≥—Ä—É–ø—ñ —î —Å—Ç—É–¥–µ–Ω—Ç–∏, —è–∫—ñ –Ω–µ –≤—ñ–¥–≤—ñ–¥—É—é—Ç—å —Ñ–∞–∫—É–ª—å—Ç–∞—Ç–∏–≤–∏. –¶–µ: $notAttendElectives',
        )
      : print('\n–í—Å—ñ —Å—Ç—É–¥–µ–Ω—Ç–∏ –≤ –≥—Ä—É–ø—ñ –≤—ñ–¥–≤—ñ–¥—É—é—Ç—å —Ñ–∞–∫—É–ª—å—Ç–∞—Ç–∏–≤–∏ üéâ');

  // —è–∫—â–æ —Å–µ—Ä–µ–¥–Ω—ñ–π –±–∞–ª –Ω–∏–∂—á–µ 6 -- –≤–∏–≤—ñ–¥
  (isAverageScore)
      ? print(
          '\n–£–≤–∞–≥–∞: –≤ –≥—Ä—É–ø—ñ —î —Å—Ç—É–¥–µ–Ω—Ç–∏, —Å–µ—Ä–µ–¥–Ω—ñ–π –±–∞–ª —è–∫–∏—Ö –º–µ–Ω—å—à–∏–π $middleAverageScore. –¶–µ: $lowAverageScore',
        )
      : print(
          '\n–í—Å—ñ —Å—Ç—É–¥–µ–Ω—Ç–∏ –≤ –≥—Ä—É–ø—ñ –º–∞—é—Ç—å —Å–µ—Ä–µ–¥–Ω—ñ–π –±–∞–ª –≤–∏—â–µ $middleAverageScore üëç',
        );

  // —Å–ø–∏—Å–æ–∫ —É—á–Ω—ñ–≤, —ñ–º–µ–Ω–∞ —è–∫–∏—Ö –º—ñ—Å—Ç—è—Ç—å –ª—ñ—Ç–µ—Ä—É searchLetter, —Ç–∞ —ó—Ö–Ω—ñ–π –±–∞–ª -- –≤–∏–≤—ñ–¥
  if (searchLetter != "") {
    (isNameWithA)
        ? print(
            '\n–°–ø–∏—Å–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤ –≤ —ñ–º–µ–Ω—ñ —è–∫–∏—Ö —î –ª—ñ—Ç–µ—Ä–∞ "$searchLetter" —Ç–∞ —ó—Ö —Å–µ—Ä–µ–¥–Ω—ñ–π –±–∞–ª: $studentsNameWithA',
          )
        : print(
            '\n–í –≥—Ä—É–ø—ñ –Ω–µ–º–∞—î —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤ –≤ —ñ–º–µ–Ω—ñ —è–∫–∏—Ö —î –ª—ñ—Ç–µ—Ä–∞ "$searchLetter"',
          );
  }
}
